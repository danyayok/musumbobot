from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from sqlalchemy.ext.asyncio import AsyncSession

from storage import get_user, update_news_sub

router = Router()

@router.callback_query(F.data == "news_sub")
async def sub_news(callback: CallbackQuery, session: AsyncSession):
    user = await get_user(session, callback.from_user.id)
    if not user:
        await callback.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π –ø–∞—Å–ø–æ—Ä—Ç")
        return
    await callback.message.edit_text(
        f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:\n"
        f"–í–∞–∂–Ω—ã–µ: {'‚úÖ' if user.news_svo else '‚ùå'}\n"
        f"–û–±—â–∏–µ: {'‚úÖ' if user.news_zhizhn else '‚ùå'}",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –≤–∞–∂–Ω—ã–µ", callback_data="toggle_svo")],
            [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—â–∏–µ", callback_data="toggle_zhizhn")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="menu")]
        ])
    )

@router.callback_query(F.data == "toggle_svo")
async def toggle_svo(callback: CallbackQuery, session: AsyncSession):
    user = await get_user(session, callback.from_user.id)
    await update_news_sub(session, user.telegram_id, "svo", not user.news_svo)
    await sub_news(callback, session)

@router.callback_query(F.data == "toggle_zhizhn")
async def toggle_zhizhn(callback: CallbackQuery, session: AsyncSession):
    user = await get_user(session, callback.from_user.id)
    await update_news_sub(session, user.telegram_id, "zhizhn", not user.news_zhizhn)
    await sub_news(callback, session)